#versi docker-compose yang digunakan
version: ‘2.15’
services:
   #Konfigurasi service webapp
   webapp:
      build:
         #posisi ambil dockerfile dari folder webapp
         context: ./webapp
         #file dockerfile yang digunakan dalam folder webapp tsb
         dockerfile: dockerfile
      #nama image hasil docker-compose build
      image: nano/web_app:1.0
      #nama container dari image web yang dijalankan
      container_name: web_app
      #setting port yg bisa diakses dr host adalah 8000 
      #port 80 adalah port service webapp yang hanya dikenali di 
      #internal network antar container
      ports:
         - 8000:80
      #aturan jika container dalam status stop/exit maka akan 
      #otomatis di restart oleh docker container ini. 
      restart: always
      #membutuhkan service lain (db)
      depends_on:
         - db
   db:
      image: webapp_pgsql:1.0
      build:
         #posisi Dockerfile 
         context: ./dbpostgres
         dockerfile: dockerfile
      # Digunakan untuk setting koneksi host di aplikasi webapp.
      container_name: postgres_host
      #persisten volume (tetap), Host : container
      #sangat penting tidak hanya menggunakan storage internal(internal volume) dalam container
      #karena storage internal yg ada pada container akan hilang saat 
      #container tersebut di remove.
      volumes:
         - postgres_database:/var/lib/postgresql/data/
      #setting environment image (lihat docs postgre)          
      environment:
         - POSTGRES_USER=nano
         - POSTGRES_DB=webapp_db
      restart: always
# definisikan volume postgres_database, 
# pastikan!!! di server Deployment sebelum menjalankan 
# docker-compose build sudah di create dulu Volumenya !!!
# caranya : docker volume create [nama_volume]  
volumes:
    postgres_database:
       # setting agar volume (data) tdk dihapus 
       # saat docker-compose down
       external : true